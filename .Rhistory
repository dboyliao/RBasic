ind <- data100[, 'age_label'] == i
hist(data99[ind, 'month_income'], main = paste('Income Distribution of',
toString(2011), 'year', 'Age Class',
toString(i)))
abline(v = 17880, col = 'blue')
}
par(mfrow = c(1,1),
mai = c(1.5, 0.8, 0.4, 0.8))
boxplot(month_income ~ age_label, data = data99, main = '2010 Income Boxplot by Age',
xlab = 'Age', ylab = 'Income')
boxplot(month_income ~ age_label, data = data100, main = '2011 Income Boxplot by Age',
xlab = 'Age', ylab = 'Income')
### data with wage lower than min wage
ind <- which(data99[, 'month_income'] < 17280)
data99_low <- na.omit(data99[ind, ])
ind <- which(data100[, 'month_income'] < 17880)
data100_low <- data100[ind, ]
ind99 <- c(which(names(data99_low) == 'main_voc_cat'),
which(names(data99_low) == 'year_ind'))
ind100 <- c(which(names(data100_low) == 'main_voc_cat'),
which(names(data100_low) == 'year_ind'))
data99And100_low_by_vac <- rbind(data99_low[, ind99], data100_low[, ind100])
table_low_by_vac <- table(year_ind = data99And100_low_by_vac[, 2],
main_voc_cat = data99And100_low_by_vac[, 1])
barplot(table_low_by_vac, beside=T, legend=T, col=c('blue', 'red'))
# ### Investigating Data ###
# ## single_level: detecting columns with single level.
# single_level <- function(data){
#         k <- ncol(data)
#         single <- c()
#         for (i in 1:k){
#                 tmp <- as.factor(data[, i])
#                 lev <- length(levels(tmp))
#                 if (lev == 1){
#                         single <- c(single, i)
#                 }
#         }
#         return(single)
# }
#
# # num: detecting non-numeric columns
# num <- function(data){
#         k <- ncol(data)
#         num <- c()
#         for (i in 1:k){
#                 tmp <- data[, i]
#                 test <- is.numeric(tmp)
#                 if (!test){
#                         num <- c(num, i)
#                 }
#         }
#         return(num)
# }
# num_ind99 <- num(data99_low)
# data99_tmp <- data99_low[, -num_ind99]
#
# sing99 <- single_level(data99_tmp)
# data99_tmp <- data99_tmp[, -sing99]
#
# fit.99 <- lm(month_income ~ ., data = data99_tmp)
# summary(fit.99)
# #summary(step(fit.99), k = 2, method = 'backward')
#
# num_ind100 <- num(data100_low)
# data100_tmp <- data100_low[, -num_ind100]
#
# sing100 <- single_level(data100_tmp)
# data100_tmp <- data100_tmp[, -sing100]
#
# fit.100 <- lm(month_income ~ ., data = data100_tmp)
# summary(fit.100)
# # summary(step(fit.100), k = 2, method = 'backward')
#
# barplot(table(data99_tmp[ , c('edu_cat')]))
install.packages('bayesm')
?bayesm
library('bayesm')
?bayesm
Sigma=matrix(c(1,.5,.5,1),ncol=2)
L=t(chol(Sigma))
trunpt=c(0,0,1,1)
above=c(1,1)
ghkvec(L,trunpt,above,100)
library('mvtnorm')
?pmvnorm
?pnorm
load("~/Documents/SChang(2011)/data.RData")
rm(list= ls())
load("~/Documents/SChang(2011)/data.RData")
data$tdum2
View(data$tdum2)
View(data$lnS)
Sigma=matrix(c(1,.5,.5,1),ncol=2)
L=t(chol(Sigma))
trunpt=c(0,0,1,1)
above=c(1,1)
ghkvec(L,trunpt,above,100000)
library('bayesm')
Sigma=matrix(c(1,.5,.5,1),ncol=2)
L=t(chol(Sigma))
trunpt=c(0,0,1,1)
above=c(1,1)
ghkvec(L,trunpt,above,100000)
Sigma=matrix(c(1,.5,.5,1),ncol=2)
L=t(chol(Sigma))
trunpt=c(1,1)
above=c(1,1)
ghkvec(L,trunpt,above,100000)
Sigma=matrix(c(1,.5,.5,1),ncol=2)
L=t(chol(Sigma))
trunpt=c(1,1)
above=c(1,1)
ghkvec(L,trunpt,above,100000)
if (!is.loaded('truncnorm')) library('truncnorm')
?truncnorm
install.packages('tmvtnorm')
u <- rtruncnorm(100)
u
u <- rtruncnorm(100, a = 0)
u
load("~/Documents/SChang(2011)/data.RData")
data2 <- as.data.frame(data)
View(data2)
View(data2)
attach(data2)
sum(tdum2)
sum(tdum3)
sum(tdum4)
sum(tdum5)
data <- as.data.frame(data)
rm(data2)
rm(u)
save.image("~/Documents/SChang(2011)/panel.RData")
rm(data)
load("~/Documents/SChang(2011)/panel.RData")
rm(list = ls())
if !(is.loaded('tmvtnorm')) library('tmvtnorm')
if !(is.loaded('tmvtnorm'))library('tmvtnorm')
if (!is.loaded('tmvtnorm')) library('tmvtnorm')
u <- rtruncnorm(100, a = 0)
load("~/Documents/SChang(2011)/panel.RData")
View(data)
data$tdum2
sum(data$tdum2)
sum(data$tdum3)
sum(data$tdum4)
sum(data$tdum5)
sum(data$tdum2)
sum(data$tdum3)
sum(data$tdum4)
sum(data$tdum5)
rm(list = ls())
if (!is.loaded('animation')){library('animation')}
iter = 40000
p = runif(iter)
coord = matrix(c(0, 0), ncol = 1)
df = rbind(data.frame(), t(coord))
dis = c(0.05, 0.81, 0.07)
for (i in 1:iter) {
if (p[i] <= dis[1]) {
m = matrix(c(0, 0, 0, 0.16), nrow = 2, ncol = 2)
const = matrix(c(0, 0), ncol = 1)
} else if (p[i] > dis[1] && p[i] <= dis[1] + dis[2]) {
m = matrix(c(0.85, -0.04, 0.04, 0.85), nrow = 2, ncol = 2)
const = matrix(c(0, 1.6), ncol = 1)
} else if (p[i] > dis[1] + dis[2] && p[i] <= sum(dis)) {
m = matrix(c(0.2, 0.23, -0.26, 0.22), nrow = 2, ncol = 2)
const = matrix(c(0, 1.6), ncol = 1)
} else {
m = matrix(c(-0.15, 0.26, 0.28, 0.24), nrow = 2, ncol = 2)
const = matrix(c(0, 0.44), ncol = 1)
}
coord = m %*% coord + const
df = rbind(df, t(coord))
}
th <- 1
for (i in seq(100, iter, by = 200)){
name <- paste('~/Barnsley/00', toString(th), '.png', sep = '')
png(filename = name, width = 900, height = 566)
plot(x = df[1:i, 2], y = df[1:i, 1], plt = c(0, 10, -5, 5), cex = 0.1, asp = 1)
dev.off()
th <- th + 1
}
th <- 1
for (i in seq(100, iter, by = 200)){
name <- paste('~/Barnsley/', toString(th), '.png', sep = '')
png(filename = name, width = 900, height = 566)
plot(x = df[1:i, 2], y = df[1:i, 1], plt = c(0, 10, -5, 5), cex = 0.1, asp = 1)
dev.off()
th <- th + 1
}
th <- 1
for (i in seq(100, iter, by = 200)){
name <- paste('~/Barnsley/', toString(th), '.png', sep = '')
png(filename = name, width = 900, height = 566)
plot(x = df[1:i, 2], y = df[1:i, 1], plt = c(0, 10, -5, 5), cex = 0.1, asp = 1)
dev.off()
th <- th + 1
}
th <- 1
for (i in seq(100, iter, by = 200)){
name <- paste('~/Barnsley/', toString(th), '.png', sep = '')
png(filename = name, width = 900, height = 566)
plot(x = df[1:i, 2], y = df[1:i, 1], plt = c(0, 10, -5, 5), cex = 0.1, asp = 1)
dev.off()
th <- th + 1
}
th <- 1
for (i in seq(1000, iter, by = 1000)){
name <- paste('~/Barnsley/', toString(th), '.png', sep = '')
png(filename = name, width = 900, height = 566)
plot(x = df[1:i, 2], y = df[1:i, 1], plt = c(0, 10, -5, 5), cex = 0.1, asp = 1)
dev.off()
th <- th + 1
}
toString(rep(1, 3))
toString(split(rep(1, 3)))
?split
split(toString(rep(1, 3)), f = ',')
th <- 0.01
for (i in seq(1000, iter, by = 1000)){
name <- paste('~/Barnsley/', toString(th), '.png', sep = '')
png(filename = name, width = 900, height = 566)
plot(x = df[1:i, 2], y = df[1:i, 1], plt = c(0, 10, -5, 5), cex = 0.1, asp = 1)
dev.off()
th <- th + 0.01
}
rm(list = ls())
if (!is.loaded('animation')){library('animation')}
iter = 40000
p = runif(iter)
coord = matrix(c(0, 0), ncol = 1)
df = rbind(data.frame(), t(coord))
dis = c(0.05, 0.81, 0.07)
for (i in 1:iter) {
if (p[i] <= dis[1]) {
m = matrix(c(0, 0, 0, 0.16), nrow = 2, ncol = 2)
const = matrix(c(0, 0), ncol = 1)
} else if (p[i] > dis[1] && p[i] <= dis[1] + dis[2]) {
m = matrix(c(0.85, -0.04, 0.04, 0.85), nrow = 2, ncol = 2)
const = matrix(c(0, 1.6), ncol = 1)
} else if (p[i] > dis[1] + dis[2] && p[i] <= sum(dis)) {
m = matrix(c(0.2, 0.23, -0.26, 0.22), nrow = 2, ncol = 2)
const = matrix(c(0, 1.6), ncol = 1)
} else {
m = matrix(c(-0.15, 0.26, 0.28, 0.24), nrow = 2, ncol = 2)
const = matrix(c(0, 0.44), ncol = 1)
}
coord = m %*% coord + const
df = rbind(df, t(coord))
}
th <- 0.01
for (i in seq(1000, iter, by = 1000)){
name <- paste('~/Barnsley/', toString(th), '.png', sep = '')
png(filename = name, width = 900, height = 566)
plot(x = df[1:i, 2], y = df[1:i, 1], plt = c(0, 10, -5, 5), cex = 0.1, asp = 1)
dev.off()
th <- th + 0.01
}
th <- 0.01
for (i in seq(1000, iter, by = 500)){
name <- paste('~/Barnsley/', toString(th), '.png', sep = '')
png(filename = name, width = 900, height = 566)
plot(x = df[1:i, 2], y = df[1:i, 1], plt = c(0, 10, -5, 5), cex = 0.1, asp = 1)
dev.off()
th <- th + 0.01
}
th <- 0.01
for (i in seq(1000, iter, by = 500)){
name <- paste('~/Barnsley/', toString(th), '.png', sep = '')
png(filename = name, width = 900, height = 566)
plot(x = df[1:i, 2], y = df[1:i, 1], plt = c(0, 10, -5, 5), cex = 0.1, asp = 1)
dev.off()
th <- th + 0.01
}
name <- paste('~/Barnsley/', toString(th), '.png', sep = '')
png(filename = name, width = 900, height = 566)
plot(x = df[1:i, 2], y = df[1:i, 1], plt = c(0, 10, -5, 5), cex = 0.1, asp = 1)
dev.off()
rm(list = ls())
iter = 10000
p = matrix(c(0, 0), ncol = 1)
coord = rbind(data.frame(), t(p))
for (i in 1:iter) {
indicator = runif(1)
if (indicator <= 0.05) {
m = matrix(c(0, 0, 0, 0.16), nrow = 2, ncol = 2)
const = matrix(c(0, 0), ncol = 1)
} else if (indicator > 0.05 && indicator <= 0.86) {
m = matrix(c(0.85, -0.04, 0.04, 0.85), nrow = 2, ncol = 2)
const = matrix(c(0, 1.6), ncol = 1)
} else if (indicator > 0.86 && indicator <= 0.93) {
m = matrix(c(0.2, 0.23, -0.26, 0.22), nrow = 2, ncol = 2)
const = matrix(c(0, 1.6), ncol = 1)
} else {
m = matrix(c(-0.15, 0.26, 0.28, 0.24), nrow = 2, ncol = 2)
const = matrix(c(0, 0.44), ncol = 1)
}
p = m %*% p + const
coord = rbind(coord, t(p))
}
plot(x = df[, 2], y = df[1:i, 1], plt = c(0, 10, -5, 5), cex = 0.1, asp = 1)
rm(list = ls())
iter = 10000
p = matrix(c(0, 0), ncol = 1)
coord = rbind(data.frame(), t(p))
for (i in 1:iter) {
indicator = runif(1)
if (indicator <= 0.05) {
m = matrix(c(0, 0, 0, 0.16), nrow = 2, ncol = 2)
const = matrix(c(0, 0), ncol = 1)
} else if (indicator > 0.05 && indicator <= 0.86) {
m = matrix(c(0.85, -0.04, 0.04, 0.85), nrow = 2, ncol = 2)
const = matrix(c(0, 1.6), ncol = 1)
} else if (indicator > 0.86 && indicator <= 0.93) {
m = matrix(c(0.2, 0.23, -0.26, 0.22), nrow = 2, ncol = 2)
const = matrix(c(0, 1.6), ncol = 1)
} else {
m = matrix(c(-0.15, 0.26, 0.28, 0.24), nrow = 2, ncol = 2)
const = matrix(c(0, 0.44), ncol = 1)
}
p = m %*% p + const
coord = rbind(coord, t(p))
}
plot(x = coord[, 2], y = coord[1:i, 1], plt = c(0, 10, -5, 5), cex = 0.1, asp = 1)
rm(list = ls())
iter = 10000
p = matrix(c(0, 0), ncol = 1)
coord = rbind(data.frame(), t(p))
for (i in 1:iter) {
indicator = runif(1)
if (indicator <= 0.05) {
m = matrix(c(0, 0, 0, 0.16), nrow = 2, ncol = 2)
const = matrix(c(0, 0), ncol = 1)
} else if (indicator > 0.05 && indicator <= 0.86) {
m = matrix(c(0.85, -0.04, 0.04, 0.85), nrow = 2, ncol = 2)
const = matrix(c(0, 1.6), ncol = 1)
} else if (indicator > 0.86 && indicator <= 0.93) {
m = matrix(c(0.2, 0.23, -0.26, 0.22), nrow = 2, ncol = 2)
const = matrix(c(0, 1.6), ncol = 1)
} else {
m = matrix(c(-0.15, 0.26, 0.28, 0.24), nrow = 2, ncol = 2)
const = matrix(c(0, 0.44), ncol = 1)
}
p = m %*% p + const
coord = rbind(coord, t(p))
}
plot(x = coord[, 2], y = coord[, 1], plt = c(0, 10, -5, 5), cex = 0.1, asp = 1)
# 建立名為 coord
rm(list=ls())
library('slidify')
library('whisker')
setwd("~/Documents/R_scripts/Slidify")
author('The Basic of R')
rm(list = ls())
# 設定遞迴次數為 10000 。
iter = 10000
# 設定起始點為 (0, 0) 的行向量。(以矩陣表示)
p = matrix(c(0, 0), ncol = 1)
# 建立名為 coord 的 data.frame。
coord = rbind(data.frame(), t(p))
for (i in 1:iter) {
# 從 uniform(0, 1) 中抽取 indicator 決定當次遞迴式。
indicator = runif(1)
if (indicator <= 0.05) {
m = matrix(c(0, 0, 0, 0.16), nrow = 2, ncol = 2)
const = matrix(c(0, 0), ncol = 1)
} else if (indicator > 0.05 && indicator <= 0.86) {
m = matrix(c(0.85, -0.04, 0.04, 0.85), nrow = 2, ncol = 2)
const = matrix(c(0, 1.6), ncol = 1)
} else if (indicator > 0.86 && indicator <= 0.93) {
m = matrix(c(0.2, 0.23, -0.26, 0.22), nrow = 2, ncol = 2)
const = matrix(c(0, 1.6), ncol = 1)
} else {
m = matrix(c(-0.15, 0.26, 0.28, 0.24), nrow = 2, ncol = 2)
const = matrix(c(0, 0.44), ncol = 1)
}
p = m %*% p + const
coord = rbind(coord, t(p))
}
plot(x = coord[, 2], y = coord[, 1], plt = c(0, 10, -5, 5), cex = 0.1, asp = 1)
1:100
for (i in 1:10){
print(i)
}
rm(list = ls())
set.seed(3690)
iter = 10000
p = runif(iter)
coord = matrix(c(0, 0), ncol = 1)
df = rbind(data.frame(), t(coord))
dis = c(0.05, 0.81, 0.07)
for (i in 1:iter) {
if (p[i] <= dis[1]) {
m = matrix(c(0, 0, 0, 0.16), nrow = 2, ncol = 2)
const = matrix(c(0, 0), ncol = 1)
} else if (p[i] > dis[1] && p[i] <= dis[1] + dis[2]) {
m = matrix(c(0.85, -0.04, 0.04, 0.85), nrow = 2, ncol = 2)
const = matrix(c(0, 1.6), ncol = 1)
} else if (p[i] > dis[1] + dis[2] && p[i] <= sum(dis)) {
m = matrix(c(0.2, 0.23, -0.26, 0.22), nrow = 2, ncol = 2)
const = matrix(c(0, 1.6), ncol = 1)
} else {
m = matrix(c(-0.15, 0.26, 0.28, 0.24), nrow = 2, ncol = 2)
const = matrix(c(0, 0.44), ncol = 1)
}
coord = m %*% coord + const
df = rbind(df, t(coord))
}
th <- 0.01
for (i in seq(1000, iter, by = 500)){
name <- paste('./Barnsley/', toString(th), '.png', sep = '')
png(filename = name, width = 900, height = 566)
plot(x = df[1:i, 2], y = df[1:i, 1], plt = c(0, 10, -5, 5), cex = 0.1, asp = 1)
dev.off()
th <- th + 0.01
}
rm(list = ls())
set.seed(3690)
iter = 40000
p = runif(iter)
coord = matrix(c(0, 0), ncol = 1)
df = rbind(data.frame(), t(coord))
dis = c(0.05, 0.81, 0.07)
for (i in 1:iter) {
if (p[i] <= dis[1]) {
m = matrix(c(0, 0, 0, 0.16), nrow = 2, ncol = 2)
const = matrix(c(0, 0), ncol = 1)
} else if (p[i] > dis[1] && p[i] <= dis[1] + dis[2]) {
m = matrix(c(0.85, -0.04, 0.04, 0.85), nrow = 2, ncol = 2)
const = matrix(c(0, 1.6), ncol = 1)
} else if (p[i] > dis[1] + dis[2] && p[i] <= sum(dis)) {
m = matrix(c(0.2, 0.23, -0.26, 0.22), nrow = 2, ncol = 2)
const = matrix(c(0, 1.6), ncol = 1)
} else {
m = matrix(c(-0.15, 0.26, 0.28, 0.24), nrow = 2, ncol = 2)
const = matrix(c(0, 0.44), ncol = 1)
}
coord = m %*% coord + const
df = rbind(df, t(coord))
}
th <- 0.01
for (i in seq(1000, iter, by = 500)){
name <- paste('./Barnsley/', toString(th), '.png', sep = '')
png(filename = name, width = 900, height = 566)
plot(x = df[1:i, 2], y = df[1:i, 1], plt = c(0, 10, -5, 5), cex = 0.1, asp = 1)
dev.off()
th <- th + 0.01
}
plot(x = df[1:i, 2], y = df[1:i, 1], plt = c(0, 10, -5, 5), cex = 0.1, asp = 1)
th <- 0.01
for (i in seq(1000, iter, by = 500)){
name <- paste('./Barnsley/', toString(th), '.png', sep = '')
png(filename = name, width = 900, height = 566)
plot(x = df[1:i, 2], y = df[1:i, 1], plt = c(0, 10, -5, 5), cex = 0.1, asp = 1)
dev.off()
th <- th + 0.01
}
name <- paste('./Barnsley/', toString(th), '.png', sep = '')
png(filename = name, width = 900, height = 566)
plot(x = df[1:i, 2], y = df[1:i, 1], plt = c(0, 10, -5, 5), cex = 0.1, asp = 1)
dev.off()
test <- list(15244736178492974895749028 = 'a')
test <- list(good = 'a', )
test <- list(good = 'a')
test <- list(15244736178492974895749028 = 333)
test <- list(a15244736178492974895749028 = 333)
test <- list(a15244736178492974895749028 = 'a')
rm(list = ls())
x <- 5
my_fun <- function() {
x <- 6
return(x + 1)
}
my_fun()
print(x)
x <- 5my_fun <- function() {
x <- 6
return(x + 1)
}
my_fun()
print(x)
my_fun
my_fun()
x <- read.line('test')
x <- readline('test')
class(x)
rm(list=ls())
library('slidify')
rm(list=ls())
library('slidify')
library('whisker')
setwd("~/Documents/R_scripts/Slidify")
author('The Basic of R')
slidify('index.Rmd')
slidify('index.Rmd')
publish(username = 'dboyliao', repo = 'RBasic')
rm(list=ls())
library('slidify')
library('whisker')
setwd("~/Documents/R_scripts/Slidify")
author('The Basic of R')
slidify('index.Rmd')
publish(username = 'dboyliao', repo = 'RBasic')
slidify('index.Rmd')
publish(username = 'dboyliao', repo = 'RBasic')
slidify('index.Rmd')
publish(username = 'dboyliao', repo = 'RBasic')
slidify('index.Rmd')
publish(username = 'dboyliao', repo = 'RBasic')
publish(username = 'dboyliao', repo = 'RBasic')
rm(list = ls())
